<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.minliu.demo.mapper.ItemMapper">
    <resultMap id="BaseResultMap" type="com.minliu.demo.pojo.Item">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="link" jdbcType="VARCHAR" property="link"/>
        <result column="price" jdbcType="DECIMAL" property="price"/>
        <result column="store" jdbcType="VARCHAR" property="store"/>
        <result column="comments" jdbcType="INTEGER" property="comments"/>
        <result column="good" jdbcType="DECIMAL" property="good"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, name, link, price, store, comments, good
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from item
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        DELETE FROM item
        WHERE id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.minliu.demo.pojo.Item">
        INSERT INTO item (id, name, link,
                          price, store, comments,
                          good)
        VALUES (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{link,jdbcType=VARCHAR},
                #{price,jdbcType=DECIMAL}, #{store,jdbcType=VARCHAR}, #{comments,jdbcType=INTEGER},
                #{good,jdbcType=DECIMAL})
    </insert>
    <insert id="insertSelective" parameterType="com.minliu.demo.pojo.Item">
        insert into item
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="link != null">
                link,
            </if>
            <if test="price != null">
                price,
            </if>
            <if test="store != null">
                store,
            </if>
            <if test="comments != null">
                comments,
            </if>
            <if test="good != null">
                good,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="link != null">
                #{link,jdbcType=VARCHAR},
            </if>
            <if test="price != null">
                #{price,jdbcType=DECIMAL},
            </if>
            <if test="store != null">
                #{store,jdbcType=VARCHAR},
            </if>
            <if test="comments != null">
                #{comments,jdbcType=INTEGER},
            </if>
            <if test="good != null">
                #{good,jdbcType=DECIMAL},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.minliu.demo.pojo.Item">
        update item
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="link != null">
                link = #{link,jdbcType=VARCHAR},
            </if>
            <if test="price != null">
                price = #{price,jdbcType=DECIMAL},
            </if>
            <if test="store != null">
                store = #{store,jdbcType=VARCHAR},
            </if>
            <if test="comments != null">
                comments = #{comments,jdbcType=INTEGER},
            </if>
            <if test="good != null">
                good = #{good,jdbcType=DECIMAL},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.minliu.demo.pojo.Item">
        UPDATE item
        SET name     = #{name,jdbcType=VARCHAR},
            link     = #{link,jdbcType=VARCHAR},
            price    = #{price,jdbcType=DECIMAL},
            store    = #{store,jdbcType=VARCHAR},
            comments = #{comments,jdbcType=INTEGER},
            good     = #{good,jdbcType=DECIMAL}
        WHERE id = #{id,jdbcType=INTEGER}
    </update>

    <insert id="batchInsert">
        INSERT INTO item(name,link,price,store,comments,good)
        VALUES
        <foreach collection="dataList" item="item" separator=",">
            (
            #{item.name,jdbcType=VARCHAR},
            #{item.link,jdbcType=VARCHAR},
            #{item.price,jdbcType=DECIMAL},
            #{item.store,jdbcType=VARCHAR},
            #{item.comments,jdbcType=INTEGER},
            #{item.good,jdbcType=DECIMAL}
            )
        </foreach>
    </insert>
</mapper>